{"version":3,"sources":["Components/SearchBox.js","Logic/DateBuilder.js","Components/LocationBox.js","Components/WhiteThingy.js","App.js","index.js"],"names":["SearchBox","val","change","keyPress","className","type","placeholder","value","onChange","onKeyPress","DateBuilder","d","getDay","getDate","getMonth","getFullYear","LocationBox","country","Date","WhiteThingy","text","cases","App","useState","setVal","setCountry","setCases","deaths","setDeaths","fetchFunc","fetch","then","res","ok","json","total","today","todayCases","todayDeaths","useEffect","e","target","evt","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAEe,SAASA,EAAT,GAAmD,IAA7BC,EAA4B,EAA5BA,IAAMC,EAAsB,EAAtBA,OAASC,EAAa,EAAbA,SAChD,OACI,yBAAKC,UAAU,cACX,2BACAA,UAAU,aACVC,KAAO,OACPC,YAAY,cACZC,MAAON,EACPO,SAAUN,EACVO,WAAYN,KCJTO,MAPf,SAAqBC,GAIjB,MAAM,GAAN,OAFW,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DA,EAAEC,UAAjB,YAA8BD,EAAEE,UAAhC,YAHa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGxEF,EAAEG,YAAtD,YAAqEH,EAAEI,gBCD5D,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,QACnC,OACI,6BACI,yBAAKb,UAAU,UAAUa,GACzB,yBAAKb,UAAU,QAAf,IAAyBM,EAAa,IAAIQ,MAA1C,MCLG,SAASC,EAAT,GAA0C,IAAlBC,EAAiB,EAAjBA,KAAOC,EAAU,EAAVA,MAC1C,OACI,yBAAKjB,UAAU,oBACX,yBAAKA,UAAU,YAAYgB,GAC3B,yBAAKhB,UAAU,aAAf,IAA6BiB,EAA7B,MCuDGC,MAxDf,WAAgB,IAAD,EACUC,mBAAS,WADnB,mBACNtB,EADM,KACAuB,EADA,OAEkBD,mBAAS,IAF3B,mBAENN,EAFM,KAEIQ,EAFJ,OAGcF,mBAAS,IAHvB,mBAGNF,EAHM,KAGEK,EAHF,OAIgBH,mBAAS,IAJzB,mBAINI,EAJM,KAIGC,EAJH,KAWPC,EAAY,SAACZ,GACD,KAAZA,GACFa,MAAM,GAAD,OAPQ,2CAOR,OAAeb,IACnBc,MAAM,SAAAC,GACL,IAAKA,EAAIC,GAAM,MAAMD,EACrB,OAAOA,EAAIE,UAEZH,MAAM,SAAAC,GACLN,EAAS,CAACS,MAAOH,EAAIX,MAAQe,MAAOJ,EAAIK,aACxCT,EAAU,CAACO,MAAOH,EAAIL,OAASS,MAAOJ,EAAIM,cAC1Cb,EAAWO,EAAIf,YAGnBO,EAAO,KAOT,OAJAe,qBAAW,WACTV,EAAU5B,KACR,IAGF,yBAAKG,UAAU,OACb,8BAEE,kBAACJ,EAAD,CAAWC,IAAKA,EAAKC,OA3BZ,SAAAsC,GAAC,OAAIhB,EAAOgB,EAAEC,OAAOlC,QA2BOJ,SA1B1B,SAACuC,GAAD,MAAqB,UAAZA,EAAIC,IAAkBd,EAAU5B,GAAO,MA2B3D,kBAACe,EAAD,CAAaC,QAASA,IAEtB,yBAAKb,UAAU,iBACb,kBAACe,EAAD,CAAaC,KAAM,cAAeC,MAAOA,EAAMc,QAC/C,kBAAChB,EAAD,CAAaC,KAAM,eAAgBC,MAAOM,EAAOQ,QAEjD,kBAAChB,EAAD,CAAaC,KAAM,cAAeC,MAAOA,EAAMe,QAC/C,kBAACjB,EAAD,CAAaC,KAAM,aAAcC,MAAOM,EAAOS,SAGjD,yBAAKhC,UAAU,UACb,6CACA,iDChDVwC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e1370574.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function SearchBox( { val , change , keyPress } ) {\r\n    return (\r\n        <div className=\"search-box\">\r\n            <input \r\n            className=\"search-bar\"\r\n            type = \"text\"\r\n            placeholder=\"Search. . .\"\r\n            value={val}\r\n            onChange={change}\r\n            onKeyPress={keyPress}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","function DateBuilder(d) {\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n    return `${days[d.getDay()]} ${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`\r\n}\r\n\r\nexport default DateBuilder;","import React from 'react'\r\nimport DateBuilder from '../Logic/DateBuilder'\r\n\r\nexport default function LocationBox( { country } ) {\r\n    return (\r\n        <div>\r\n            <div className=\"header\">{country}</div>\r\n            <div className=\"date\"> { DateBuilder( new Date() ) } </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function WhiteThingy( { text , cases } ) {\r\n    return (\r\n        <div className=\"middle-container\">\r\n            <div className=\"headline\">{text}</div>\r\n            <div className=\"mid-cases\"> {cases} </div>\r\n        </div>\r\n    )\r\n}\r\n","import React , { useState , useEffect } from 'react';\nimport SearchBox from './Components/SearchBox';\nimport LocationBox from './Components/LocationBox';\nimport WhiteThingy from './Components/WhiteThingy';\n\nfunction App() {\n  const [val , setVal] = useState(\"Romania\");\n  const [country , setCountry] = useState(\"\");\n  const [cases , setCases] = useState({});\n  const [deaths , setDeaths] = useState({});\n  \n  const BASE_URL = \"https://corona.lmao.ninja/v2/countries/\"\n\n  const change = e => setVal(e.target.value);\n  const keyPress = (evt) => evt.key === \"Enter\" ? fetchFunc(val) : ''\n\n  const fetchFunc = (country) => {\n    if (country !== \"\") {\n      fetch(`${BASE_URL}${country}`)\n      .then( res => {\n        if (!res.ok) { throw res }\n        return res.json()  //we only get here if there is no error\n      })\n      .then( res => {\n        setCases({total: res.cases , today: res.todayCases})\n        setDeaths({total: res.deaths , today: res.todayDeaths})\n        setCountry(res.country)\n      })\n    }\n    setVal('')\n  }\n\n  useEffect( () => {\n    fetchFunc(val)\n  } , [] )\n\n  return (\n    <div className=\"app\">\n      <main>\n\n        <SearchBox val={val} change={change} keyPress={keyPress} />\n        <LocationBox country={country} />\n\n        <div className=\"middle scroll\">\n          <WhiteThingy text={\"Total Cases\"} cases={cases.total} />\n          <WhiteThingy text={\"Total Deaths\"} cases={deaths.total} />\n\n          <WhiteThingy text={\"Today Cases\"} cases={cases.today} />\n          <WhiteThingy text={\"Today Dies\"} cases={deaths.today} />\n        </div>\n\n        <div className=\"footer\">\n          <div>Empty Button</div>\n          <div>Empty Button</div>\n        </div>\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}